@using IdentityServer.Legacy; 
@using IdentityServer.Legacy.Extensions.DependencyInjection;
@using Microsoft.Extensions.Options;
@using IdentityServer.Legacy.Services.UI; 
@inject IUserInterfaceService userInterface;
@inject Microsoft.Extensions.Configuration.IConfiguration configuration; 

@model LoginViewModel
@{
    Layout = "~/Views/Shared/_Layout_Login.cshtml";
}
<div class="login-page">
    <partial name="_ValidationSummary" />

    <div class="row">
        @if (Model.EnableLocalLogin)
        {
            <div class="col-sm-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table>
                            <tr>
                                <td>
                                    <div class="panel-logo"></div>
                                </td>
                                <td>
                                    <h3 class="panel-title">@userInterface.ApplicationTitle</h3>
                                    <div>Login</div>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">

                        <form asp-route="/Login">
                            <input type="hidden" asp-for="ReturnUrl" />

                            <fieldset>
                                <div class="form-group">
                                    <label asp-for="Username"></label>
                                    <input class="form-control" placeholder="Enter username..." asp-for="Username" autofocus>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Password"></label>
                                    <input type="password" class="form-control" placeholder="Enter password..." asp-for="Password" autocomplete="off">
                                </div>
                                @if (Model.CaptchaImage != null)
                                {
                                    <img src="data:image/png;base64,@Html.Raw(Convert.ToBase64String(Model.CaptchaImage))" />
                                    <div class="form-group">
                                        <label asp-for="CaptchaCode"></label>
                                        <input asp-for="CaptchaCode" class="form-control" />
                                    </div>
                                }
                                @if (Model.AllowRememberLogin)
                                {
                                    <div class="form-group login-remember">
                                        <label asp-for="RememberLogin">
                                            <input asp-for="RememberLogin">
                                            <strong>Remember My Login</strong>
                                        </label>
                                    </div>
                                }
                                <div class="form-group">
                                    <button class="btn btn-primary" name="button" value="login">Login</button>
                                    @*<button class="btn btn-default" name="button" value="cancel">Cancel</button>*@
                                </div>
                            </fieldset>
                        </form>
                        @if (configuration.DenyForgotPasswordChallange() == false && userInterface.DenyForgotPasswordChallange == false)
                        {
                            <p>
                                <a href="~/Identity/Account/ForgotPassword">Forgot Password?</a>
                            </p>
                        }
                        @if (!configuration.DenyRegisterAccount())
                        {
                            <p>
                                <a href="~/Identity/Account/Register">Register a new account...</a>
                            </p>
                        }
                    </div>
                </div>
            </div>
        }

        @if (Model.VisibleExternalProviders.Any())
        {
            <div class="col-md-6 col-sm-6 external-providers">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">External Login</h3>
                    </div>
                    <div class="panel-body">
                        <ul class="list-inline">
                            @foreach (var provider in Model.VisibleExternalProviders)
                            {
                                <li>
                                    <a class="btn btn-default"
                                       asp-controller="External"
                                       asp-action="Challenge"
                                       asp-route-provider="@provider.AuthenticationScheme"
                                       asp-route-returnUrl="@Model.ReturnUrl">
                                        @provider.DisplayName
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }

        @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
        {
            <div class="alert alert-warning">
                <strong>Invalid login request</strong>
                There are no login schemes configured for this client.
            </div>
        }
    </div>
</div>
