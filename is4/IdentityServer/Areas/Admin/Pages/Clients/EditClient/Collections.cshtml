@page
@model IdentityServer.Areas.Admin.Pages.Clients.EditClient.CollectionsModel
@{
    ViewData["Title"] = "Client Collections";
    ViewData["ActivePage"] = EditClientNavPages.Collections;
}

<h4>@ViewData["Title"]</h4>
<div class="row">
    <partial name="_StatusMessage" model="Model.StatusMessage" />
    @foreach (var field in typeof(IdentityServer.Legacy.Models.IdentityServerWrappers.ClientModel).GetProperties())
    {
        if (!Model.Input.IgnoreProperties.Contains(field.Name) &&
            field.CanWrite && field.CanRead &&
           (field.PropertyType == typeof(string[]) ||
            field.PropertyType == typeof(ICollection<string>) ||
            field.PropertyType == typeof(IEnumerable<string>)))
        {
            var name = field.Name;
            var count = field.GetValue(Model.CurrentClient) == null ? 0 : ((IEnumerable<string>)field.GetValue(Model.CurrentClient)).Count();
    <div class="col-md-6">
        <form id="-form" method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="Input.ClientId" />
            <input type="hidden" name="Input.PropertyName" value="@field.Name" />
            <label>@($"{ field.Name }[{ count }]")</label>

            @{ string values = String.Join("\n", (IEnumerable<string>)field.GetValue(Model.CurrentClient)); }

            <div class="form-group">
                <textarea name="Input.PropertyValue"
                          class="form-control"
                          rows="@Math.Max(2, count + 2)">@Html.Raw(values)</textarea>
            </div>

            <button type="submit" class="btn btn-default">Update @field.Name</button>
        </form>
    </div>
        }    
     }
</div>
