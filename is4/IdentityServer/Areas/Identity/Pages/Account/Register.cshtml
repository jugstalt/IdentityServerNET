@page
@using IdentityServer.Legacy.Services.UI;
@inject IUserInterfaceService userInterface;
@inject IdentityServer.Legacy.Services.DbContext.IUserStoreFactory userStoreFactory
@model RegisterModel
@{
    Layout = "/Views/Shared/_Layout_Register.cshtml";

    ViewData["Title"] = "Register";

    var userDbContext = await userStoreFactory.CreateUserDbContextInstance();
    var editor = userDbContext.ContextConfiguration?.RegisterAccountEditor ?? new IdentityServer.Legacy.UserInteraction.RegisterAccountEditor();
}


<div class="row">
    <div class="col-sm-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                <table>
                    <tr>
                        <td>
                            <div class="panel-logo"></div>
                        </td>
                        <td>
                            <h3 class="panel-title">@ViewData["Title"]</h3>
                            <div>Create a new account</div>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="panel-body">
                <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Input.Email"></label>
                        <input asp-for="Input.Email" class="form-control" placeholder="Your E-Mail..." />
                        <span asp-validation-for="Input.Email" class="text-danger"></span>
                    </div>
                    @if (editor.ShowGivenName)
                    {
                        <div class="form-group">
                            <label asp-for="Input.GivenName"></label>
                            <input asp-for="Input.GivenName" class="form-control" placeholder="Your first name..." />
                            <span asp-validation-for="Input.GivenName" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        <input asp-for="Input.GivenName" class="form-control" type="hidden" value="---" />
                    }
                    @if (editor.ShowFamilyName)
                    {
                        <div class="form-group">
                            <label asp-for="Input.FamilyName"></label>
                            <input asp-for="Input.FamilyName" class="form-control"  placeholder="Your last name..."/>
                            <span asp-validation-for="Input.FamilyName" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        <input asp-for="Input.FamilyName" class="form-control" type="hidden" value="---" />
                    }
                    @if (editor.ShowCompany)
                    {
                        <div class="form-group">
                            <label asp-for="Input.Company"></label>
                            <input asp-for="Input.Company" class="form-control"  placeholder="Your company..." />
                            <span asp-validation-for="Input.Company" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        <input asp-for="Input.Company" class="form-control" type="hidden" value="---" />
                    }
                    @if (!String.IsNullOrEmpty(editor.PromotionCode))
                    {
                        <div class="form-group">
                            <label asp-for="Input.PromotionCode"></label>
                            <input asp-for="Input.PromotionCode" class="form-control" placeholder="A valid promotion code..."/>
                            <span asp-validation-for="Input.PromotionCode" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        <input asp-for="Input.PromotionCode" class="form-control" type="hidden" value="---" />
                    }
                    <div class="form-group">
                        <label asp-for="Input.Password"></label>
                        <input asp-for="Input.Password" class="form-control" placeholder="A strong password..."/>
                        <span asp-validation-for="Input.Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Input.ConfirmPassword"></label>
                        <input asp-for="Input.ConfirmPassword" class="form-control" placeholder="Confirn the password, please..."/>
                        <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                    </div>
                    <button type="submit" class="btn btn-default">Register</button>
                </form>
            </div>
        </div>
    </div>
    @if ((Model.ExternalLogins?.Count() ?? 0) > 0)
    {
        <div class="col-md-6 col-md-offset-2">
            <section>
                <h4>Use another service to register.</h4>
                <hr />
                @{
                    if ((Model.ExternalLogins?.Count ?? 0) == 0)
                    {
                        @*
                            <div>
                                <p>
                                    There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                    for details on setting up this ASP.NET application to support logging in via external services.
                                </p>
                            </div>
                        *@
                    }
                    else
                    {
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                            <div>
                                <p>
                                    @foreach (var provider in Model.ExternalLogins)
                                    {
                                        <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                    }
                                </p>
                            </div>
                        </form>
                    }
                }
            </section>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
