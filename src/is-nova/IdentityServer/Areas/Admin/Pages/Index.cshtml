@page
@using IdentityServer.Nova
@using IdentityServer.Nova.Extensions
@using Microsoft.Extensions.Configuration  
@inject IConfiguration configuration
@inject IdentityServer.Nova.Services.ColorSchemeService ColorScheme
@model IdentityServer.Areas.Admin.IndexModel
@{
    Layout = "_Layout.cshtml";
}

<ul class="ui-tiles">
    @if (!configuration.DenyAdminUsers() && Model.HasUserDb && Model.ApplicationUser.IsUserAdministrator())
    {
        <li class="ui-tile">
            <a asp-page="./Users/Index">
                <div class="@ColorScheme.TileIcon("account")">

                </div>
                <div class="ui-tile-text ">
                    Users...
                </div>
            </a>
        </li>
    }
    @if (!configuration.DenyAdminRoles() && Model.HasRoleDb && Model.ApplicationUser.IsRoleAdministrator())
    {
        <li class="ui-tile">
            <a asp-page="./Roles/Index">
                <div class="@ColorScheme.TileIcon("group")">

                </div>
                <div class="ui-tile-text ">
                    Roles...
                </div>
            </a>
        </li>
    }
    @if (!configuration.DenyAdminResources() && Model.HasResourceDb && Model.ApplicationUser.IsResourceAdministrator())
    {
        <li class="ui-tile">
            <a asp-page="./Resources/Index">
                <div class="@ColorScheme.TileIcon("package")">

                </div>
                <div class="ui-tile-text">
                    Resources (Identities & APIs)
                </div>
            </a>
        </li>
    }
    @if (!configuration.DenyAdminClients() && Model.HasClientDb && Model.ApplicationUser.IsClientAdministrator())
    {
        <li class="ui-tile">
            <a asp-page="./Clients/Index">
                <div class="@ColorScheme.TileIcon("all-devices")">

                </div>
                <div class="ui-tile-text">
                    Clients...
                </div>
            </a>
        </li>
    }
    @if (!configuration.DenyAdminSecretsVault() && Model.HasClientDb && Model.ApplicationUser.IsSecretVaultAdministrator())
    {
        <li class="ui-tile">
            <a asp-page="./SecretsVault/Index">
                <div class="@ColorScheme.TileIcon("lock-closed")">

                </div>
                <div class="ui-tile-text">
                    Secrets Vault...
                </div>
            </a>
        </li>
    }
    @if (!configuration.DenySigningUI() && Model.HasClientDb && Model.ApplicationUser.IsSignungUIAdministrator())
    {
        <li class="ui-tile">
            <a asp-page="./Signing/Index">
                <div class="@ColorScheme.TileIcon("code-c")">

                </div>
                <div class="ui-tile-text">
                    Sign payload UI...
                </div>
            </a>
        </li>
    }
    @if (!configuration.DenyAdminCreateCerts() && Model.HasUserDb && Model.ApplicationUser.IsUserAdministrator())
    {
        <li class="ui-tile">
            <a asp-page="./Certificates/Index">
                <div class="@ColorScheme.TileIcon("edit-text")">
                </div>
                <div class="ui-tile-text">
                    Create Certs
                </div>
            </a>
        </li>
    }
</ul>