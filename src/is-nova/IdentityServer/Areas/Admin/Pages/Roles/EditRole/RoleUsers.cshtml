@page
@model IdentityServer.Areas.Admin.Pages.Roles.EditRole.RoleUsersModel
@{
    ViewData["Title"] = "Role Users";
    ViewData["ActivePage"] = EditRoleNavPages.RoleUsers;
}
@inject IdentityServer.Nova.Services.ColorSchemeService ColorScheme

    <div class="row">
        <partial name="_StatusMessage" model="Model.StatusMessage" />
        @if (Model.RoleUsers != null && Model.RoleUsers.Count() >= 0)
        {
        <div class="col-md-6">
            <ul class="nav nav-pills nav-stacked">
                @foreach (var user in Model.RoleUsers.OrderBy(u=>u.UserName))
                {
                    <li class="ui-list-item">
                        <div class="@ColorScheme.LeftIcon("account")"></div>
                        <div style="display:inline-block;padding:10px 15px 10px 5px">@(user.UserName)</div>
                        <a style="display:inline-block;float:right"
                           asp-page-handler="Remove"
                           asp-route-id="@Model.CurrentApplicationRole.Id"
                           asp-route-userId="@user.Id">
                            Remove
                        </a>
                    </li>
                }
            </ul>
        </div>
        }
        <div class="col-md-6">
            <form id="-form" method="post">
                <h4>Add existing user</h4>
                <div asp-validation-summary="All" class="text-danger"></div>
                <input type="hidden" asp-for="AddUserInput.RoleId" />
                <div class="form-group">
                    <label asp-for="AddUserInput.Username"></label>
                    <input asp-for="AddUserInput.Username" class="form-control" placeholder="Existing user..." />
                </div>
                <button id="add-user-button" type="submit" class="btn btn-default">Add</button>
            </form>
        </div>
    </div>
