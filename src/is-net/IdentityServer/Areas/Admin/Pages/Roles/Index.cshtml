@page
@model IdentityServer.Areas.Admin.Pages.Roles.IndexModel
@{
}
@inject IdentityServerNET.Services.ColorSchemeService ColorScheme

@if (Model.ApplicationRoles != null)
{
    <div class="row">
        <div class="col-md-6">
            <ul class="nav nav-pills nav-stacked">
                @foreach (var role in Model.ApplicationRoles)
                {
                    <li class="ui-list-item">
                        <a asp-page="EditRole/Index"
                           asp-route-id="@role.Id">
                            <div class="@ColorScheme.LeftIcon("group")"></div>
                            <strong>@role.Name</strong>
                            <div>
                                @role.Description
                            </div>
                        </a>
                    </li>
                }
            </ul>
        </div>
        <div class="col-md-6">
            <h4>Create new role</h4>
            <form id="create-role-form" method="post">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="CreateInput.Rolename"></label>
                    <input asp-for="CreateInput.Rolename" class="form-control" placeholder="new role name..." />
                    <span asp-validation-for="CreateInput.Rolename" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CreateInput.Description"></label>
                    <input asp-for="CreateInput.Description" class="form-control" placeholder="Optional: describe the role..." />
                    <span asp-validation-for="CreateInput.Description" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-default">Create new role</button>
            </form>
            <hr />
            <h4>Add IdentityServer role</h4>
            <ul class="nav nav-pills nav-stacked">
                @foreach (var methodInfo in typeof(KnownRoles).GetMethods().Where(m => m.ReturnType == typeof(ApplicationRole)))
                {
                    var knownRole = (ApplicationRole)methodInfo.Invoke(Activator.CreateInstance<KnownRoles>(), null);

                    if (Model.ApplicationRoles.Any(r => r.Name == knownRole.Name)) continue;

                    <li class="ui-list-item">
                        <a asp-page-handler="AddKnownRole"
                           asp-route-name="@knownRole.Name">
                            <div class="@ColorScheme.LeftIcon("group")"></div>
                            <strong>@knownRole.Name</strong>
                            <div>
                                @knownRole.Description
                            </div>
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>

}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}