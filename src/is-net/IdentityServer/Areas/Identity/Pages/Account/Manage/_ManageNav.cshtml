@inject SignInManager<ApplicationUser> SignInManager
@model ManageAccountEditor

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();

    string[] categories = null;
    if (Model?.EditorInfos != null)
    {
        categories = Model.EditorInfos
                            .Select(p => p.Category)
                            .Distinct()
                            .ToArray();
    }
}

    <ul class="nav nav-pills nav-stacked">
        @if (categories != null)
        {

            @foreach (var category in categories)
            {
                <li class="@(ViewData["Category"] != null && category.Equals(ViewData["Category"].ToString(), StringComparison.OrdinalIgnoreCase) ? "active" : "")">
                    <a asp-page="./Index"
                       asp-route-category="@category">@category</a>
                </li>
            }
        }

            @if (Model?.ShowChangeEmailPage == true)
            {
                <li class="@ManageNavPages.EmailNavClass(ViewContext)"><a id="email" asp-page="./Email">Email</a></li>
            }
            @if (Model?.ShowChangePasswordPage == true)
            {
                <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">Password</a></li>
            }
            @if (hasExternalLogins)
            {
                <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
            }
            @if (Model?.ShowTfaPage == true)
            {
                <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
            }

            <li class="@ManageNavPages.PersonalDataNavClass(ViewContext)">
                <a asp-page="./PersonalData">Personal data</a>
            </li>
        

    </ul>